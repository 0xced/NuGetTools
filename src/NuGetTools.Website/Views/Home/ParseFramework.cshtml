@model ParseFrameworkOutput
@{
    ViewData["Title"] = "Parse Framework";
}

<h1>Parse a framework</h1>
<p>
    Enter a NuGet framework to see how it parses. Both short form (e.g. <code>net45</code>) and long form (e.g. <code>.NETFramework,Version=v4.5</code>) are supported.
</p>

<form method="GET" action="">
    <div class="form-group">
        <label for="framework">Framework</label>
        <input type="text" class="form-control" name="framework" id="framework"
               placeholder="net45" value="@Model.Input.Framework">
    </div>
    <button type="submit" class="btn btn-default">Submit</button>
</form>

<div class="results">
    @if (@Model.InputStatus == InputStatus.Valid)
    {
        <div class="alert alert-success" role="alert">
            <p>
                The input value is <b>@Model.Input.Framework</b>.
            </p>
            <p>
                The short folder name is <code>@Model.Framework.ShortFolderName</code>.
            </p>
            <p>
                The .NET framework name is <code>@Model.Framework.DotNetFrameworkName</code>.
            </p>
        </div>
    }
    else if (@Model.InputStatus == InputStatus.Invalid)
    {
        <div class="alert alert-danger" role="alert">
            The framework <b>@Model.Input.Framework</b> could not be parsed.
        </div>
    }
</div>
